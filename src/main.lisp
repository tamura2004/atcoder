(defvar n (read))
(defvar q (read))
(defvar uf (make-array n))
(dotimes (i n) (setf (aref uf i) i))
(defun uf-root (uf v) (setf (aref uf v) (if (= (aref uf v) v) v (uf-root uf (aref uf v)))))
(defun uf-same (uf v nv) (= (uf-root uf v) (uf-root uf nv)))
(defun uf-unite (uf v nv) (setf (aref uf (uf-root uf v)) (uf-root uf nv)))
(dotimes (i q)
  (let ((ty (read)) (v (read)) (nv (read)))
    (if (= ty 0)
      (uf-unite uf v nv)
      (write-line (if (uf-same uf v nv) "Yes" "No")))))